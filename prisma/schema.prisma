generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  diaries   Diary[]
  todos     Todo[]
  calendars Calendar[]
}

model Calendar {
  id        Int      @id @default(autoincrement())
  date      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  diaries   Diary[]
  todos     Todo[]

  @@index([userId])
}

model Diary {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  date      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  calendar  Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  calendarId Int

  @@index([userId])
}

model Todo {
  id        Int      @id @default(autoincrement())
  content   String
  date      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  calendar  Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  calendarId Int

  @@index([userId])
}



//Advertisement

// prisma 에 작성되는 model 은 npx prisma db push 코드를 통해 push 해야지만 planetscale 에 적용됨
// npx prisma format
// npx prisma studio