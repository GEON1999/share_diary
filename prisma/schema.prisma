generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                   Int                   @id @default(autoincrement())
  email                String                @unique
  name                 String?
  password             String
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  diaries              Diary[]
  todos                Todo[]
  calendarPermissions  CalendarPermission[]
  calendarUserProfiles CalendarUserProfile[]
}

model Calendar {
  id                   Int                   @id @default(autoincrement())
  name                 String
  date                 String?
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  diaries              Diary[]
  todos                Todo[]
  calendarPermissions  CalendarPermission[]
  inviteCode           InviteCode[]
  calendarUserProfiles CalendarUserProfile[]
}

model Diary {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  date       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  calendar   Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  calendarId Int

  @@index([userId])
}

model Todo {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  date       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  calendar   Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  calendarId Int

  @@index([userId])
}

model CalendarPermission {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  calendar   Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  calendarId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  role       String   @default("VIEWER") //OWNER | EDITOR | VIEWER
}

model InviteCode {
  code       String   @unique
  calendar   Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  calendarId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([calendarId])
}

model CalendarUserProfile {
  id         Int      @id @default(autoincrement())
  name       String?
  color      String?
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  calendar   Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  calendarId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

//Advertisement

// prisma 에 작성되는 model 은 npx prisma db push 코드를 통해 push 해야지만 planetscale 에 적용됨
// npx prisma format
// npx prisma studio
